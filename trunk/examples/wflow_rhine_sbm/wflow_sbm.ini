[API]
IF=0,1


[fit]
parameter_0 = M
#parameter_1 = RootingDepth
Q = testing.tss
ColMeas = [1,8,7]
ColSim = [1,8,7]
WarmUpSteps = 1
areamap=staticmaps/wflow_subcatch.map
areacode=[1,8,7]


# Model parameters and settings
[model]
AnnualDischarge=2290
# Alpha for wiver-width estimation 5 for mountain stream 60 for the river rhine
Alpha=120
ModelSnow=1
ScalarInput=0
InterpolationMethod=inv
WIMaxScale=0.8
Tslice=1
# Maximum upstream distance to update the flow in metres
UpdMaxDist=300000.0

[misc]
#mapSaveInterval=365

[framework]
# outputformat for the *dynamic* mapstacks (not the states and summary maps)
# 1: pcraster
# 2: numpy
# 3: matlab
outputformat=1

[layout]
# if set to zero the cell-size is given in lat/long (the default)
sizeinmetres = 0




[outputmaps]
self.Inflow=iflow
self.ExfiltWater=exfw
self.SurfaceRunoff=run
#self.SubCellFrac=scf
#self.Inwater=inw
#self.DistToUpdPt=dist
#self.SnowMelt=sno
self.FirstZoneFlux=fzf
self.TopoLdd=ldd
#self.FirstZoneDepth=fir
#self.watbal=wat
self.ActLeakage=lek

[summary]
self.MaxLeakage=MaxLeakage.map
# Save and average these per LU type
[outputcsv_0]
samplemap=staticmaps/wflow_landuse.map
self.Transfer=tra_lu.csv

# gauge output
[outputtss_0]
samplemap=staticmaps/wflow_gauges.map
self.SurfaceRunoff=run.tss
self.WaterLevel=lev.tss

[outputtss_1]
samplemap=staticmaps/wflow_gauges.map
self.ActLeakage=lek.tss
# Save and sample these at gauge locations

[outputcsv_1]
samplemap=staticmaps/area.map
#samplemap=staticmaps/wflow_subcatch.map

# Alle runoff in mm
self.InwaterMM=specrun.csv


# Neerslag in mm
self.Precipitation=prec.csv

# totale verdamping in mm
self.ActEvap+self.Interception=teact.csv

# Totale storage in mm
self.UStoreDepth + self.FirstZoneDepth + self.CanopyStorage = store.csv

# water budget not taking Delta S and GW flux into account
self.Precipitation - self.ActEvap - self.Interception - self.InwaterMM = watbalnostore.csv

